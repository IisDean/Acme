var editorText = '<h2 style="margin-top: 24px; margin-bottom: 16px; padding-bottom: 0.3em; line-height: 1.25; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;;">执行上下文</h2><p style="margin-top: 0px; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 16px;">执行上下文指当前的执行环境中的，变量、函数声明，参数，作用域链和this等信息。</p><p style="margin-top: 0px; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 16px;">包含2个上下文：</p><ol style="padding-left: 2em; margin-top: 0px; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 16px;"><li>全局执行上下文（只有一个）</li><li style="margin-top: 0.25em;">函数执行上下文（每次调用函数都会创建一个新的上下文）</li></ol><p style="margin-top: 0px; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 16px;">包含的3个重要属性：</p><ol style="padding-left: 2em; margin-top: 0px; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 16px;"><li>变量对象（VO）</li><li style="margin-top: 0.25em;">作用域链（Scope Chain）</li><li style="margin-top: 0.25em;">this</li></ol><pre style="font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 13.6px; margin-top: 0px; margin-bottom: 16px; overflow-wrap: normal; padding: 16px; overflow: auto; line-height: 1.45; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);"><div style="overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248);"><code style="font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 12px; padding: 0px; margin-right: 0px; margin-left: 0px; background-color: transparent; display: inline; overflow: visible; line-height: inherit; overflow-wrap: normal; border: 0px;"><span style="font-weight: bold;">const</span>ExecutionContext={VO:<span style="color: rgb(0, 134, 179);">window</span>,<span style="color: rgb(153, 153, 136); font-style: italic;">ScopeChain:{},<span style="color: rgb(153, 153, 136); font-style: italic;"><span style="font-weight: bold;">this</span>:<span style="color: rgb(0, 134, 179);">window</span>};</code></div></pre><h2 style="margin-top: 24px; margin-bottom: 16px; padding-bottom: 0.3em; line-height: 1.25; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;;"><a id="_20"style="background-color: transparent; color: inherit;"></a>执行上下文栈</h2><p style="margin-top: 0px; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 16px;">JS引擎首先会创建一个执行上下文栈，作用是管理上下文。在JS解释器初始化时首先创建一个全局上下文且压入上下文栈顶中，随着遇到函数调用时，会创建一个新的函数执行上下文且压入到上下文栈顶中，随着函数执行完后，会被上下文栈顶弹出，直回到全局上下文。</p><pre style="font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 13.6px; margin-top: 0px; margin-bottom: 16px; overflow-wrap: normal; padding: 16px; overflow: auto; line-height: 1.45; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);"><div style="overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248);"><code style="font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 12px; padding: 0px; margin-right: 0px; margin-left: 0px; background-color: transparent; display: inline; overflow: visible; line-height: inherit; overflow-wrap: normal; border: 0px;"><span style="font-weight: bold;">var</span>a=<span style="color: rgb(0, 128, 128);">10</span>;<span style="font-weight: bold;">function</span><span style="color: rgb(153, 0, 0); font-weight: bold;">fn2</span>(){<span style="color: rgb(0, 134, 179);">console</span>.log(<span style="color: rgb(221, 17, 68);">\'fn2\'</span>)}<span style="font-weight: bold;">function</span><span style="color: rgb(153, 0, 0); font-weight: bold;">fn1</span>(){fn2();<span style="color: rgb(0, 134, 179);">console</span>.log(<span style="color: rgb(221, 17, 68);">\'fn1\'</span>)}fn1();<span style="color: rgb(153, 153, 136); font-style: italic;"><span style="font-weight: bold;">let</span>ECStack=[];<span style="color: rgb(153, 153, 136); font-style: italic;">ECStack.push(<span style="color: rgb(221, 17, 68);">\'globalContext\'</span>);<span style="color: rgb(153, 153, 136); font-style: italic;"><span style="color: rgb(153, 153, 136); font-style: italic;">ECStack.push(<span style="color: rgb(221, 17, 68);">"fn1Context"</span>);<span style="color: rgb(153, 153, 136); font-style: italic;"><span style="color: rgb(153, 153, 136); font-style: italic;">ECStack.push(<span style="color: rgb(221, 17, 68);">"fn2Context"</span>);<span style="color: rgb(153, 153, 136); font-style: italic;"><span style="color: rgb(153, 153, 136); font-style: italic;">ECStack.pop();<span style="color: rgb(153, 153, 136); font-style: italic;"><span style="color: rgb(153, 153, 136); font-style: italic;">ECStack.pop();<span style="color: rgb(153, 153, 136); font-style: italic;"><span style="color: rgb(0, 134, 179);">console</span>.log(ECStack);<span style="color: rgb(153, 153, 136); font-style: italic;"><span style="color: rgb(153, 153, 136); font-style: italic;"></code></div></pre><h2 style="margin-top: 24px; margin-bottom: 16px; padding-bottom: 0.3em; line-height: 1.25; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;;"><a id="_58"style="background-color: transparent; color: inherit;"></a>执行上下文的生命周期</h2><p style="margin-top: 0px; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 16px;">执行上下文的生命周期分为2个：创建和执行。</p><ul style="margin-top: 0px; margin-bottom: 16px; margin-left: 0px; padding-left: 2em; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 16px;"><li>创建阶段：<ul style="margin-top: 0px; margin-bottom: 0px; margin-left: 0px; padding-left: 2em;"><li>创建变量对象</li><li style="margin-top: 0.25em;">建立作用域链</li><li style="margin-top: 0.25em;">确定this的指向</li></ul></li><li style="margin-top: 0.25em;">执行阶段：<ul style="margin-top: 0px; margin-bottom: 0px; margin-left: 0px; padding-left: 2em;"><li>变量的赋值</li><li style="margin-top: 0.25em;">函数的引用</li><li style="margin-top: 0.25em;">执行其他的代码</li></ul></li><li style="margin-top: 0.25em;">执行完毕后，从上下文栈顶弹出，等待回收</li></ul><h2 style="margin-top: 24px; margin-bottom: 16px; padding-bottom: 0.3em; line-height: 1.25; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;;"><a id="_70"style="background-color: transparent; color: inherit;"></a>变量对象</h2><p style="margin-top: 0px; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 16px;">变量对象指上下文中的数据作用域，储存着上下文的变量和函数声明。变量对象的工作也分为2种阶段：进入上下文和代码执行。</p><ul style="margin-top: 0px; margin-bottom: 16px; margin-left: 0px; padding-left: 2em; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 16px;"><li>进入上下文阶段：<ul style="margin-top: 0px; margin-bottom: 0px; margin-left: 0px; padding-left: 2em;"><li>如果是函数上下文，会处理函数参数：如果没有传入，则初始化参数值为undefined</li><li style="margin-top: 0.25em;">函数声明：如果发生函数名字相同，则后者会覆盖前者</li><li style="margin-top: 0.25em;">变量声明：初始化变量为undefined，如果发生与其他变量或者函数声明同名，则会忽略</li></ul></li><li style="margin-top: 0.25em;">代码执行阶段：<ul style="margin-top: 0px; margin-bottom: 0px; margin-left: 0px; padding-left: 2em;"><li>按顺序执行，进行修改赋值</li></ul></li></ul><pre style="font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 13.6px; margin-top: 0px; margin-bottom: 16px; overflow-wrap: normal; padding: 16px; overflow: auto; line-height: 1.45; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);"><div style="overflow-x: auto; padding: 0.5em; color: rgb(51, 51, 51); background: rgb(248, 248, 248);"><code style="font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 12px; padding: 0px; margin-right: 0px; margin-left: 0px; background-color: transparent; display: inline; overflow: visible; line-height: inherit; overflow-wrap: normal; border: 0px;"><span style="color: rgb(153, 153, 136); font-style: italic;"><span style="color: rgb(0, 134, 179);">console</span>.log(x);<span style="color: rgb(153, 153, 136); font-style: italic;"><span style="font-weight: bold;">var</span>x=<span style="color: rgb(0, 128, 128);">10</span>;<span style="color: rgb(0, 134, 179);">console</span>.log(x);<span style="color: rgb(153, 153, 136); font-style: italic;">x=<span style="color: rgb(0, 128, 128);">20</span>;<span style="font-weight: bold;">function</span><span style="color: rgb(153, 0, 0); font-weight: bold;">x</span>(){}<span style="color: rgb(0, 134, 179);">console</span>.log(x);<span style="color: rgb(153, 153, 136); font-style: italic;"><span style="font-weight: bold;">if</span>(<span style="color: rgb(0, 128, 128);">true</span>){<span style="font-weight: bold;">var</span>a=<span style="color: rgb(0, 128, 128);">30</span>}<span style="font-weight: bold;">else</span>{<span style="font-weight: bold;">var</span>b=<span style="color: rgb(0, 128, 128);">40</span>}<span style="color: rgb(0, 134, 179);">console</span>.log(a);<span style="color: rgb(153, 153, 136); font-style: italic;"><span style="color: rgb(0, 134, 179);">console</span>.log(b);<span style="color: rgb(153, 153, 136); font-style: italic;"><span style="color: rgb(153, 153, 136); font-style: italic;"><span style="font-weight: bold;">var</span>VO={x:<span style="color: rgb(221, 17, 68);">\'reference to function x() {}\'</span>,a:<span style="color: rgb(0, 128, 128);">undefined</span>,b:<span style="color: rgb(0, 128, 128);">undefined</span>}<span style="color: rgb(153, 153, 136); font-style: italic;"><span style="font-weight: bold;">var</span>VO={x:<span style="color: rgb(0, 128, 128);">20</span>,a:<span style="color: rgb(0, 128, 128);">30</span>,b:<span style="color: rgb(0, 128, 128);">undefined</span>}</code></div></pre><blockquote style="margin-top: 0px; margin-bottom: 16px; padding: 0px 1em; color: rgb(106, 115, 125); border-left-width: 0.25em; border-left-color: rgb(223, 226, 229); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 16px;"><p style="margin-top: 0px; margin-bottom: 0px;">未进入执行阶段之前，变量对象(VO)中的属性都不能访问！但是进入执行阶段之后，变量对象(VO)转变为了活动对象(AO)，里面的属性都能被访问了，然后开始进行执行阶段的操作。它们其实都是同一个对象，只是处于执行上下文的不同生命周期。</p></blockquote><h2 style="margin-top: 24px; margin-bottom: 16px; padding-bottom: 0.3em; line-height: 1.25; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;;"><a id="_118"style="background-color: transparent; color: inherit;"></a>参考资料</h2><ul style="margin-top: 0px; margin-bottom: 16px; margin-left: 0px; padding-left: 2em; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 16px;"><li><a href="https://github.com/mqyqingfeng/Blog/issues/5"target="_blank"style="background-color: transparent; color: rgb(3, 102, 214);">JavaScript深入之变量对象</a>,by mqyqingfeng</li></ul>';

export default editorText;